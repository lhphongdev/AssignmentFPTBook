@model AssignmentFPTBook.Models.Book

@{
    ViewBag.Title = "Create new book";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}




<div class="container-fluid">
    <div class="row justify-content-center mb-3">
        <div class="col-lg-8">
            <div class="row">
                <div class="col">
                    <div class="card shadow mb-3">
                        <div class="card-header py-3">
                            <p class="text-center text-primary m-0 fw-bold" style="font-size: 26px;"><strong>Add new book</strong><br></p>
                        </div>
                        <div class="card-body">

                            @using (Html.BeginForm("Create", "Books", FormMethod.Post, new { enctype = "multipart/form-data" }))
                            {
                                @Html.AntiForgeryToken()
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                                <div class="row">
                                    <div class="col">
                                        <div class="mb-3">
                                            @Html.LabelFor(model => model.BookID, htmlAttributes: new { @class = "form-label" })
                                            @Html.EditorFor(model => model.BookID, new { htmlAttributes = new { @class = "form-control", @autofocus = "", @required = "", @placeholder = "Enter book ID", @style = "color:black" } })
                                            @Html.ValidationMessageFor(model => model.BookID, "", new { @class = "text-danger" })
                                        </div>

                                        <div class="mb-3">
                                            @Html.LabelFor(model => model.BookName, htmlAttributes: new { @class = "form-label" })
                                            @Html.EditorFor(model => model.BookName, new { htmlAttributes = new { @class = "form-control", @required = "", @placeholder = "Enter book name", @style = "color:black" } })
                                            @Html.ValidationMessageFor(model => model.BookName, "", new { @class = "text-danger" })
                                        </div>

                                        <div class="mb-3">
                                            @Html.LabelFor(model => model.CategoryID, htmlAttributes: new { @class = "form-label" })
                                            @Html.DropDownList("CategoryID", null, htmlAttributes: new { @class = "form-control", @required = "", @style = "color:black" })
                                            @Html.ValidationMessageFor(model => model.CategoryID, "", new { @class = "text-danger" })
                                        </div>

                                        <div class="mb-3">
                                            @Html.LabelFor(model => model.AuthorID, htmlAttributes: new { @class = "form-label" })
                                            @Html.DropDownList("AuthorID", null, htmlAttributes: new { @class = "form-control", @required = "", @style = "color:black" })
                                            @Html.ValidationMessageFor(model => model.AuthorID, "", new { @class = "text-danger" })
                                        </div>

                                        <div class="mb-3">
                                            @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "form-label" })
                                            @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control", @required = "", @placeholder = "Enter quantity", @min = 1, @style = "color:black" } })
                                            @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
                                        </div>

                                        <div class="mb-3">
                                            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "form-label" })
                                            @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control", @required = "", @placeholder = "Enter price", @min = 1, @style = "color:black" } })
                                            @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                                        </div>

                                        <div class="mb-3">
                                            @Html.LabelFor(model => model.ShortDesc, htmlAttributes: new { @class = "form-label" })
                                            @Html.EditorFor(model => model.ShortDesc, new { htmlAttributes = new { @class = "form-control", @required = "", @placeholder = "Enter short description", @style = "color:black" } })
                                            @Html.ValidationMessageFor(model => model.ShortDesc, "", new { @class = "text-danger" })
                                        </div>

                                        <div class="mb-3">
                                            @Html.LabelFor(model => model.DetailDesc, htmlAttributes: new { @class = "form-label" })
                                            @Html.EditorFor(model => model.DetailDesc, new { htmlAttributes = new { @class = "form-control", @required = "", @placeholder = "Enter detail description", @style = "color:black" } })
                                            @Html.ValidationMessageFor(model => model.DetailDesc, "", new { @class = "text-danger" })
                                        </div>

                                        <div class="mb-3">
                                            @Html.LabelFor(model => model.UrlImage, htmlAttributes: new { @class = "form-label" })

                                            <input class="form-control" type="file" name="image" id="image" required="" accept="image/*">
                                            @if (ViewBag.Extension != null)
                                            {
                                                <span class="text-danger" style="margin-left:30px;font-size:20px">@ViewBag.Extension</span>
                                            }


                                            @Html.ValidationMessageFor(model => model.UrlImage, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>

                                <div class="mb-3" style="text-align: center;">
                                    <input type="submit" value="Create" class="btn btn-primary btn-lg" style="width: 124.875px;" />
                                    @Html.ActionLink("Cancel", "Index", null, new { @class = "btn btn-danger btn-lg", @style = "margin-left: 2%; width: 120px; " })
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>





